{"ast":null,"code":"var _jsxFileName = \"/home/hp/userList/client/src/components/Users/User/User.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = _ref => {\n  _s();\n  let {\n    userData\n  } = _ref;\n  const [id, setId] = useState('');\n  const [name, setName] = useState(userData.name);\n  const [email, setEmail] = useState(userData.email);\n  const [gender, setGender] = useState(userData.gender);\n  const [editMode, setEditMode] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Edit\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    setEditMode(!editMode);\n    if (buttonText == \"Edit\") setButtonText(\"Done\");else setButtonText(\"Edit\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"field\",\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true\n          // defaultValue= {userData.name}\n          ,\n          value: name,\n          onChange: e => setName(e.target.value),\n          disabled: !editMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"field\",\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          disabled: !editMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"field\",\n        children: [\"Gender:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: gender,\n          onChange: e => setGender(e.target.value),\n          disabled: !editMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: [\"Status: \", userData.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"98WSDzIMepj1eFfyGxOuQBJGo+k=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useEffect","User","userData","id","setId","name","setName","email","setEmail","gender","setGender","editMode","setEditMode","buttonText","setButtonText","handleSubmit","e","preventDefault","target","value","status"],"sources":["/home/hp/userList/client/src/components/Users/User/User.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css';\nconst User = ({ userData }) => {\n    const [id, setId] = useState('');\n    const [name, setName] = useState(userData.name);\n    const [email, setEmail] = useState(userData.email);\n    const [gender, setGender] = useState(userData.gender);\n    const [editMode, setEditMode] = useState(false);\n    const [buttonText, setButtonText] = useState(\"Edit\");\n\n    const handleSubmit= (e) => {\n        e.preventDefault();\n        setEditMode(!editMode);\n        if(buttonText==\"Edit\")\n            setButtonText(\"Done\")\n        else\n            setButtonText(\"Edit\")\n      }\n\n    return (\n        <form onSubmit= {handleSubmit}  className=\"form\">\n            <div className=\"field\">\n        <label className=\"field\">\n          Name:\n          <input type=\"text\" \n            required \n            // defaultValue= {userData.name}\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            disabled= {!editMode}\n            />\n        </label>\n        </div>\n        <div className=\"field\">\n        <label className=\"field\">\n          Email:\n          <input type=\"text\" \n            required \n            value={email}\n            onChange={(e) => setEmail(e.target.value)} \n            disabled= {!editMode}/>\n        </label>\n        </div>\n        <div className=\"field\">\n        <label className=\"field\">\n          Gender:\n          <input type=\"text\" \n            required \n            value={gender}\n            onChange={(e) => setGender(e.target.value)} \n            disabled= {!editMode}/>\n        </label>\n        </div>\n        <div className=\"status\">\n            Status: {userData.status}\n        </div>\n        <input type=\"submit\" value={buttonText} />\n      </form>\n    )\n}\n\nexport default User;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC;AACtB,MAAMC,IAAI,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACtB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACG,QAAQ,CAACG,IAAI,CAAC;EAC/C,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACG,QAAQ,CAACK,KAAK,CAAC;EAClD,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAACG,QAAQ,CAACO,MAAM,CAAC;EACrD,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EAEpD,MAAMgB,YAAY,GAAGC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClBL,WAAW,CAAC,CAACD,QAAQ,CAAC;IACtB,IAAGE,UAAU,IAAE,MAAM,EACjBC,aAAa,CAAC,MAAM,CAAC,MAErBA,aAAa,CAAC,MAAM,CAAC;EAC3B,CAAC;EAEH,oBACI;IAAM,QAAQ,EAAGC,YAAa;IAAE,SAAS,EAAC,MAAM;IAAA,wBAC5C;MAAK,SAAS,EAAC,OAAO;MAAA,uBAC1B;QAAO,SAAS,EAAC,OAAO;QAAA,iCAEtB;UAAO,IAAI,EAAC,MAAM;UAChB,QAAQ;UACR;UAAA;UACA,KAAK,EAAEV,IAAK;UACZ,QAAQ,EAAGW,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UACzC,QAAQ,EAAG,CAACR;QAAS;UAAA;UAAA;UAAA;QAAA,QACnB;MAAA;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,uBACtB;QAAO,SAAS,EAAC,OAAO;QAAA,kCAEtB;UAAO,IAAI,EAAC,MAAM;UAChB,QAAQ;UACR,KAAK,EAAEJ,KAAM;UACb,QAAQ,EAAGS,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC1C,QAAQ,EAAG,CAACR;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IACnB;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,uBACtB;QAAO,SAAS,EAAC,OAAO;QAAA,mCAEtB;UAAO,IAAI,EAAC,MAAM;UAChB,QAAQ;UACR,KAAK,EAAEF,MAAO;UACd,QAAQ,EAAGO,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UAC3C,QAAQ,EAAG,CAACR;QAAS;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IACnB;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACVT,QAAQ,CAACkB,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACtB,eACN;MAAO,IAAI,EAAC,QAAQ;MAAC,KAAK,EAAEP;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACrC;AAEb,CAAC;AAAA,GAzDKZ,IAAI;AAAA,KAAJA,IAAI;AA2DV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}